[project]
name = "db-test-system"
version = "0.1.0"
description = ""
authors = [
    {name = "Nikita",email = "nikkitkit07@mail.ru"}
]
readme = "README.md"
requires-python = ">=3.12"


[tool.poetry.dependencies]
python = "^3.12"
structlog = "~24.2.0"
docker = "~7.1.0"
pandas = "~2.2.2"
psycopg2 = "~2.9.9"
PyQt6 = "~6.8.1"
SQLAlchemy = "~2.0.31"
psutil = "~5.9.8"
alembic = "~1.14.1"
redis = "~5.2.1"
pydantic = "~2.7.4"
matplotlib = "~3.10.0"
pymysql = "^1.1.1"
cryptography = "^44.0.2"
oracledb = "^3.0.0"
pyodbc = "^5.2.0"
sqlalchemy-firebird = "^2.1"

[tool.poetry.group.dev.dependencies]
ruff = "~0.9.3"


[lint.black]
line-length = 100

[tool.ruff]
target-version = "py311"
src = ["src"]
ignore = ["D", "ANN10", "RUF001", "RUF012", "FIX", "TD002", "TD003"]
select = ["ALL"]
unfixable = ["E711", "E712"]
line-length = 100

[tool.ruff.per-file-ignores]
"src/tests/*" = [
    "S101",  # Use of `assert` detected
    "PT004",  # Fixture `setup` does not return anything, add leading underscore
    "ANN201",  # Missing return type annotation for public function `setup`
]

[lint.ruff.pylint]
max-args = 6

[lint.ruff.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[lint.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
